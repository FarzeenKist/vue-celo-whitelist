Smart contract is built first using RemixIDE, deployed on the celo blockchain, contract address and abi copied and saved in the contract.js file created in the src folder

First set up your vue project(using vite or cli);
Develop the frontend without adding any functions for interactivity, variables initialized with dummy data and styles added for beautification
Go to the styles.css folder, delete all the styles defined there and add the following lines of css code. This is to prevent style errors from clashing css style rules

Install packages
  1.  celo contrack kit
  2.  web3 from web3.js using nmp install web3
  3.  install vite-plugin-node-polyfills, this is to prevent polyfills errors that usually arises
Import installed packages
Open vite.config.js file or vue.config.js file(if vue cli is used to set up the project)
paste the following code snippet
  import { defineConfig } from 'vite';
  import vue from '@vitejs/plugin-vue';
  import { nodePolyfills } from 'vite-plugin-node-polyfills';

  // https://vitejs.dev/config/
  export default defineConfig({
    plugins: [
      vue(),
      nodePolyfills({
        protocolImports: true,
      })
    ]
  })

Writing the functions
  1.  Connect wallet function (here the only function to be implemented is the connecet to wallet function first)
  2.  Create a contract instance using the contract details(that is, the contractAbi and the contractAddress) stored in contract.js file
  3.  Get balance function, call this function in the connectWallet function to get the users balance immediately
  4.  Join the whitelist function
  5.  Connect all the functions that is, add check in the connectWallet function to check if an address has already been whitelisted